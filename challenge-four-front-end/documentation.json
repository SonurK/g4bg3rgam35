{
    "pipes": [
        {
            "name": "FileSizePipe",
            "id": "pipe-FileSizePipe-46924b3a0cfeabd0e5f5225ad931e5a7",
            "file": "src/pipes/file-size.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "extension",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'MB'"
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "size",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "extension",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "defaultValue": "'MB'",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "fileSize",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'fileSize'\n})\nexport class FileSizePipe implements PipeTransform {\n\n  transform(size: number, extension: string = 'MB'): string {\n    return (size / (1024 * 1024)).toFixed(2) + \" \" + extension;\n  }\n\n}\n"
        }
    ],
    "interfaces": [
        {
            "name": "IShippingOptions",
            "id": "interface-IShippingOptions-98a48c6c972c260d61383afd8d4e379f",
            "file": "src/interfaces/i.shipping-options.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IShippingOptions {\n    name: string;\n    value: number;\n    description?: string;\n}",
            "properties": [
                {
                    "name": "description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IShippingReceiver",
            "id": "interface-IShippingReceiver-5f3fe1edbdb7e3f0449c17c02a02adc3",
            "file": "src/interfaces/i.shipping-label-steps.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IShippingSender {\n    name: string,\n    street?: string,\n    city: string,\n    state?: string,\n    zip?: string\n}\n\nexport interface IShippingReceiver {\n    name?: string,\n    street?: string,\n    city?: string,\n    state: string,\n    zip: string\n}\n\nexport interface IShippingWeight {\n    weight: number\n}\n\nexport interface IShippingShippingOption {\n    shippingOption: number\n}\n\nexport enum WizardAction {\n    Prev = 1,\n    Next = 2,\n    End = 3\n};",
            "properties": [
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "street",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "zip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IShippingSender",
            "id": "interface-IShippingSender-5f3fe1edbdb7e3f0449c17c02a02adc3",
            "file": "src/interfaces/i.shipping-label-steps.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IShippingSender {\n    name: string,\n    street?: string,\n    city: string,\n    state?: string,\n    zip?: string\n}\n\nexport interface IShippingReceiver {\n    name?: string,\n    street?: string,\n    city?: string,\n    state: string,\n    zip: string\n}\n\nexport interface IShippingWeight {\n    weight: number\n}\n\nexport interface IShippingShippingOption {\n    shippingOption: number\n}\n\nexport enum WizardAction {\n    Prev = 1,\n    Next = 2,\n    End = 3\n};",
            "properties": [
                {
                    "name": "city",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "state",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "street",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "zip",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IShippingShippingOption",
            "id": "interface-IShippingShippingOption-5f3fe1edbdb7e3f0449c17c02a02adc3",
            "file": "src/interfaces/i.shipping-label-steps.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IShippingSender {\n    name: string,\n    street?: string,\n    city: string,\n    state?: string,\n    zip?: string\n}\n\nexport interface IShippingReceiver {\n    name?: string,\n    street?: string,\n    city?: string,\n    state: string,\n    zip: string\n}\n\nexport interface IShippingWeight {\n    weight: number\n}\n\nexport interface IShippingShippingOption {\n    shippingOption: number\n}\n\nexport enum WizardAction {\n    Prev = 1,\n    Next = 2,\n    End = 3\n};",
            "properties": [
                {
                    "name": "shippingOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IShippingWeight",
            "id": "interface-IShippingWeight-5f3fe1edbdb7e3f0449c17c02a02adc3",
            "file": "src/interfaces/i.shipping-label-steps.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IShippingSender {\n    name: string,\n    street?: string,\n    city: string,\n    state?: string,\n    zip?: string\n}\n\nexport interface IShippingReceiver {\n    name?: string,\n    street?: string,\n    city?: string,\n    state: string,\n    zip: string\n}\n\nexport interface IShippingWeight {\n    weight: number\n}\n\nexport interface IShippingShippingOption {\n    shippingOption: number\n}\n\nexport enum WizardAction {\n    Prev = 1,\n    Next = 2,\n    End = 3\n};",
            "properties": [
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        },
        {
            "name": "IUserMock",
            "id": "interface-IUserMock-01779236e1c44130e75aabffb7fd3a46",
            "file": "src/interfaces/i.user-mock.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface IUserMock {\n    name: string;\n    password: string;\n}",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "password",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 164,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AuthenticationService",
            "id": "injectable-AuthenticationService-4bf537c5c08f4c64b3eb7df76fbb6683",
            "file": "src/services/authentication.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "cleanLocalStorage",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "deleteUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getUser",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "isJSON",
                    "args": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        123
                    ],
                    "jsdoctags": [
                        {
                            "name": "str",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "loginStatus",
                    "args": [],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n\n  constructor(\n    private router: Router,\n  ) { }\n\n  setUser() {\n    let user = {\n      logged: true,\n      user: {\n        a: \"a\",\n        b: \"b\"\n      }\n    }\n    localStorage.setItem('user', JSON.stringify(user));\n  }\n\n  getUser() {\n    return localStorage.getItem('user');\n  }\n\n  deleteUser() {\n    this.router.navigate(['/login']);\n    localStorage.removeItem('user');\n  }\n\n  cleanLocalStorage() {\n    localStorage.clear();\n  }\n\n  loginStatus(): boolean {\n    var user = this.getUser();\n    if (user != null && this.isJSON(user)) {\n      user = JSON.parse(user);\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  public isJSON(str): boolean {\n    if (/^\\s*$/.test(str)) return false;\n    str = str.replace(/\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g, '@');\n    str = str.replace(/\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g, ']');\n    str = str.replace(/(?:^|:|,)(?:\\s*\\[)+/g, '');\n    return (/^[\\],:{}\\s]*$/).test(str);\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "LoginService",
            "id": "injectable-LoginService-63d3851f66ef78b1a02b11d61365f0e3",
            "file": "src/services/login.service.ts",
            "properties": [
                {
                    "name": "availableUsers",
                    "defaultValue": "new Array",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "validatePassword",
                    "args": [
                        {
                            "name": "user",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "form",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 29,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "user",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "form",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "validateUser",
                    "args": [
                        {
                            "name": "form",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "form",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { GET_USERS_MOCKS } from '../models/user-mocks.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoginService {\n\n  public availableUsers: Array<any> = new Array;\n\n  constructor() {\n    this.availableUsers = GET_USERS_MOCKS();\n  }\n\n  validateUser(form): boolean {\n    var user = this.availableUsers.find((element) => {\n      if (element.name == form.value.name) {\n        return element\n      }\n    });\n    if (user != undefined) {\n      let userExists = this.validatePassword(user, form);\n      return userExists;\n    } else {\n      return false;\n    }\n  }\n\n  validatePassword(user, form): boolean {\n    if (user.password === form.value.password) {\n      \n      return true;\n    } else {\n      return false;\n    }\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 9
            },
            "type": "injectable"
        },
        {
            "name": "RequestService",
            "id": "injectable-RequestService-a54e19b4379b6bb733e1e21df1e7f638",
            "file": "src/services/request.service.ts",
            "properties": [
                {
                    "name": "_headers",
                    "defaultValue": "new HttpHeaders()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "request",
                    "args": [
                        {
                            "name": "requestType",
                            "type": "RequestType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "requestURL",
                            "type": "RequestURL",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        },
                        {
                            "name": "query",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Promise<any>",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "requestType",
                            "type": "RequestType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "requestURL",
                            "type": "RequestURL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "body",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "query",
                            "type": "any",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setHeaders",
                    "args": [],
                    "optional": false,
                    "returnType": "HttpHeaders",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient, HttpRequest, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { RequestType, RequestURL, URLSERVICE } from 'src/models/request.model';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RequestService {\n\n  public _headers = new HttpHeaders();\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  setHeaders(): HttpHeaders {\n    return this._headers.set(\"Content-Type\", \"application/json\");\n  }\n\n  request(requestType: RequestType, requestURL: RequestURL, body?: any, query?: any): Promise<any> {\n\n    const _header: HttpHeaders = this.setHeaders();\n\n    return new Promise((resolve, reject) => {\n\n      let info = URLSERVICE(requestURL);\n      let request = new HttpRequest(requestType, info.url, body, { headers: _header });\n\n      this.http.request(request).toPromise()\n        .then((responseData: any) => {\n          resolve(responseData)\n        }).catch((errorResponseData) => {\n          reject(errorResponseData)\n        })\n    });\n  }\n\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "http",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "WizardService",
            "id": "injectable-WizardService-d48d324ae0e8f3fd9da8f01ce8ef1324",
            "file": "src/services/wizard.service.ts",
            "properties": [
                {
                    "name": "receiver",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IShippingReceiver",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "sender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IShippingSender",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "shippingOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IShippingShippingOption",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "weight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IShippingWeight",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "createAction",
                    "args": [],
                    "optional": false,
                    "returnType": "Object",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getFinalResult",
                    "args": [],
                    "optional": false,
                    "returnType": "object",
                    "typeParameters": [],
                    "line": 44,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getReceiver",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getSender",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getShippingOption",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getWeight",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "setReceiver",
                    "args": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingReceiver",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingReceiver",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setSender",
                    "args": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingSender",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingSender",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setShippingOption",
                    "args": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingShippingOption",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingShippingOption",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "setWeight",
                    "args": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingWeight",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dataInformation",
                            "type": "IShippingWeight",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "shippingCost",
                    "args": [],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { IShippingSender, IShippingReceiver, IShippingWeight, IShippingShippingOption } from 'src/interfaces/i.shipping-label-steps';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WizardService {\n\n  public sender: IShippingSender;\n  public receiver: IShippingReceiver;\n  public weight: IShippingWeight;\n  public shippingOption: IShippingShippingOption;\n\n  constructor() { }\n\n  setSender(dataInformation: IShippingSender) {\n    this.sender = { ...dataInformation };\n  }\n  getSender() {\n    return this.sender;\n  }\n\n  setReceiver(dataInformation: IShippingReceiver) {\n    this.receiver = { ...dataInformation };\n  }\n  getReceiver() {\n    return this.receiver;\n  }\n\n  setWeight(dataInformation: IShippingWeight) {\n    this.weight = dataInformation;\n  }\n  getWeight(): any {\n    return this.weight;\n  }\n\n  setShippingOption(dataInformation: IShippingShippingOption) {\n    this.shippingOption = dataInformation;\n  }\n  getShippingOption(): any {\n    return this.shippingOption;\n  }\n\n  getFinalResult(): object {\n    return {\n      from: {\n        name: this.getSender().name,\n        street: this.getSender().street,\n        city: this.getSender().city,\n        state: this.getSender().state,\n        zip: this.getSender().zip\n      },\n      to: {\n        name: this.getReceiver().name,\n        street: this.getReceiver().street,\n        city: this.getReceiver().city,\n        state: this.getReceiver().state,\n        zip: this.getReceiver().zip\n      },\n      weight: this.getWeight(),\n      shippingOption: this.getShippingOption(),\n      shippingCost: this.shippingCost()\n    }\n  }\n\n  shippingCost() {\n    const shippingRate = 0.40;\n    return this.getWeight() * shippingRate * (this.getShippingOption() === this.getShippingOption().ground ? 1 : 1.5);\n  }\n\n  createAction(): Object {\n    let newDialog;\n    return Object.assign({}, newDialog);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "type": "injectable"
        }
    ],
    "guards": [
        {
            "name": "AuthGuard",
            "id": "injectable-AuthGuard-e6afc0057cbc3ddb14ba2ed382e42d77",
            "file": "src/guards/auth.guard.ts",
            "properties": [
                {
                    "name": "authenticationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methods": [
                {
                    "name": "canActivate",
                    "args": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canActivateChild",
                    "args": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "next",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "state",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canDeactivate",
                    "args": [
                        {
                            "name": "component",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentRoute",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "currentState",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "nextState",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean | UrlTree",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "component",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentRoute",
                            "type": "ActivatedRouteSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "currentState",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "nextState",
                            "type": "RouterStateSnapshot",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "canLoad",
                    "args": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | Promise | boolean",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "route",
                            "type": "Route",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "segments",
                            "type": "UrlSegment[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { CanActivate, CanActivateChild, CanDeactivate, CanLoad, Route, UrlSegment, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthenticationService } from '../services/authentication.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild, CanDeactivate<unknown>, CanLoad {\n\n  constructor(\n    private router: Router, \n    public authenticationService: AuthenticationService\n    ) { }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    if (this.authenticationService.loginStatus()) {\n      return true;\n    } else {\n      this.router.navigate(['/login']);\n      return false;\n    }\n  }\n  canActivateChild(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  canDeactivate(\n    component: unknown,\n    currentRoute: ActivatedRouteSnapshot,\n    currentState: RouterStateSnapshot,\n    nextState?: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n    return true;\n  }\n  canLoad(\n    route: Route,\n    segments: UrlSegment[]): Observable<boolean> | Promise<boolean> | boolean {\n    return true;\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 10,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "guard"
        }
    ],
    "interceptors": [],
    "classes": [
        {
            "name": "AppPage",
            "id": "class-AppPage-e666007312551271a1e6ae42610b3bec",
            "file": "e2e/src/app.po.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo() {\n    return browser.get(browser.baseUrl) as Promise<any>;\n  }\n\n  getTitleText() {\n    return element(by.css('app-root h1')).getText() as Promise<string>;\n  }\n}\n",
            "properties": [],
            "methods": [
                {
                    "name": "getTitleText",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "navigateTo",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 4,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-e13665d7ed34ff9bf9a1c49fd3225e4d",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [
                "./app.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'shipping-label-maker'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'shipping-label-maker';\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./app.component.scss"
                }
            ],
            "stylesData": "",
            "templateData": "<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<!-- <app-shipping-label-maker></app-shipping-label-maker> -->\n\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n\n\n<router-outlet></router-outlet>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-642c6c4e474cd5a0ac760dfda26b2fc9",
            "file": "src/stories/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "template": "<button   type=\"button\"\n   (click)=\"onClick.emit($event)\"\n   [ngClass]=\"classes\"\n   [ngStyle]=\"{ 'background-color': backgroundColor }\"\n >\n   {{ label }}\n </button>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "backgroundColor",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "What background color to use",
                    "description": "<p>What background color to use</p>\n",
                    "line": 26,
                    "type": "string"
                },
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "pos": 711,
                            "end": 724,
                            "flags": 4227072,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 322,
                            "tagName": {
                                "pos": 712,
                                "end": 720,
                                "flags": 4227072,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "required"
                            },
                            "comment": ""
                        }
                    ],
                    "rawdescription": "Button contents",
                    "description": "<p>Button contents</p>\n",
                    "line": 40,
                    "type": "string"
                },
                {
                    "name": "primary",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "Is this the principal call to action on the page?",
                    "description": "<p>Is this the principal call to action on the page?</p>\n",
                    "line": 20,
                    "type": "boolean"
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "How large should the button be?",
                    "description": "<p>How large should the button be?</p>\n",
                    "line": 32,
                    "type": "\"small\" | \"medium\" | \"large\""
                }
            ],
            "outputsClass": [
                {
                    "name": "onClick",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "rawdescription": "\n\nOptional click handler\n",
                    "description": "<p>Optional click handler</p>\n",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-button',\n  template: ` <button\n    type=\"button\"\n    (click)=\"onClick.emit($event)\"\n    [ngClass]=\"classes\"\n    [ngStyle]=\"{ 'background-color': backgroundColor }\"\n  >\n    {{ label }}\n  </button>`,\n  styleUrls: ['./button.css'],\n})\nexport default class ButtonComponent {\n  /**\n   * Is this the principal call to action on the page?\n   */\n  @Input()\n  primary = false;\n\n  /**\n   * What background color to use\n   */\n  @Input()\n  backgroundColor?: string;\n\n  /**\n   * How large should the button be?\n   */\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  /**\n   * Button contents\n   *\n   * @required\n   */\n  @Input()\n  label = 'Button';\n\n  /**\n   * Optional click handler\n   */\n  @Output()\n  onClick = new EventEmitter<Event>();\n\n  public get classes(): string[] {\n    const mode = this.primary ? 'storybook-button--primary' : 'storybook-button--secondary';\n\n    return ['storybook-button', `storybook-button--${this.size}`, mode];\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-button {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-weight: 700;\n  border: 0;\n  border-radius: 3em;\n  cursor: pointer;\n  display: inline-block;\n  line-height: 1;\n}\n.storybook-button--primary {\n  color: white;\n  background-color: #1ea7fd;\n}\n.storybook-button--secondary {\n  color: #333;\n  background-color: transparent;\n  box-shadow: rgba(0, 0, 0, 0.15) 0px 0px 0px 1px inset;\n}\n.storybook-button--small {\n  font-size: 12px;\n  padding: 10px 16px;\n}\n.storybook-button--medium {\n  font-size: 14px;\n  padding: 11px 20px;\n}\n.storybook-button--large {\n  font-size: 16px;\n  padding: 12px 24px;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "accessors": {
                "classes": {
                    "name": "classes",
                    "getSignature": {
                        "name": "classes",
                        "type": "[]",
                        "returnType": "string[]",
                        "line": 48
                    }
                }
            }
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-246e2a69dc126a3bd76c6328dd3b93e2",
            "file": "src/stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <storybook-button\n          *ngIf=\"user\"\n          size=\"small\"\n          (onClick)=\"onLogout.emit($event)\"\n          label=\"Log out\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          size=\"small\"\n          (onClick)=\"onLogin.emit($event)\"\n          label=\"Log in\"\n        ></storybook-button>\n        <storybook-button\n          *ngIf=\"!user\"\n          primary\n          size=\"small\"\n          (onClick)=\"onCreateAccount.emit($event)\"\n          label=\"Sign up\"\n        ></storybook-button>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "LoginComponent",
            "id": "component-LoginComponent-b549216698979d70034a4ce09d5f3933",
            "file": "src/modules/features/login/login.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-login",
            "styleUrls": [
                "./login.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./login.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authenticationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "errorMark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "login",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "LoginService",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loginUserForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 35,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { LoginService } from '../../../services/login.service';\nimport { AuthenticationService } from '../../../services/authentication.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  public loginUserForm: FormGroup;\n  public errorMark: boolean;\n  public loading: boolean;\n\n  constructor(\n    private router: Router,\n    public login: LoginService,\n    public authenticationService: AuthenticationService,\n  ) {\n    this.errorMark = false;\n    this.loading = false;\n\n    this.loginUserForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      password: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  validateLogin() {\n    if (this.loginUserForm.valid) {\n      this.loading = true;\n      setTimeout(() => {\n        if (this.login.validateUser(this.loginUserForm)) {\n          this.loading = false;\n          this.errorMark = false;\n          this.authenticationService.setUser()\n          this.router.navigate([`shipping/shipping-label-maker/${this.loginUserForm.value.name}`]);\n        } else {\n          this.errorMark = true;\n          this.loading = false;\n        }\n      }, 1500);\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".app-login-box {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n\n    form {\n        width: 500px;\n    }\n}\n\n.login-button {\n    width: 500px;\n}\n\n@keyframes spinner {\n    to {\n        transform: rotate(360deg);\n    }\n}\n\n.spinner:before {\n    content: '';\n    box-sizing: border-box;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    width: 20px;\n    height: 20px;\n    margin-top: -10px;\n    margin-left: -10px;\n    border-radius: 50%;\n    border: 2px solid #ffffff;\n    border-top-color: #000000;\n    animation: spinner .8s linear infinite;\n}\n",
                    "styleUrl": "./login.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "login",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 16,
                "jsdoctags": [
                    {
                        "name": "router",
                        "type": "Router",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "login",
                        "type": "LoginService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section class=\"app-login-box\">\n  <h1>\n    Welcome\n  </h1>\n\n  <form [formGroup]=\"loginUserForm\">\n    <mat-form-field class=\"shipping-input-full-width\">\n      <input matInput placeholder=\"Name\" formControlName=\"name\">\n    </mat-form-field>\n    <br>\n    <mat-form-field class=\"shipping-input-full-width\">\n      <input type=\"password\" matInput placeholder=\"Password\" formControlName=\"password\">\n    </mat-form-field>\n  </form>\n\n  <p class=\"shipping-warn-text\" *ngIf=\"errorMark\">\n    Username or password incorrect\n  </p>\n\n  <br>\n\n  <div style=\"text-align:center\">\n    <button class=\"login-button\" mat-raised-button color=\"primary\" [class.spinner]=\"loading\" [disabled]=\"loading\"\n      (click)=\"validateLogin()\">Login</button>\n  </div>\n\n</section>\n\n<!-- <router-outlet></router-outlet> -->"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-8f196770333aa216860a88c0b6b221aa",
            "file": "src/stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": ""
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 73,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"onLogout.emit($event)\"\n      (onLogin)=\"onLogin.emit($event)\"\n      (onCreateAccount)=\"onCreateAccount.emit($event)\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  @Input()\n  user: unknown = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n\n// export const Page = ({ user, onLogin, onLogout, onCreateAccount }) => (\n//   <article>\n//     <Header user={user} onLogin={onLogin} onLogout={onLogout} onCreateAccount={onCreateAccount} />\n\n// );\n// Page.propTypes = {\n//   user: PropTypes.shape({}),\n//   onLogin: PropTypes.func.isRequired,\n//   onLogout: PropTypes.func.isRequired,\n//   onCreateAccount: PropTypes.func.isRequired,\n// };\n\n// Page.defaultProps = {\n//   user: null,\n// };\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nh2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\np {\n  margin: 1em 0;\n}\n\na {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nli {\n  margin-bottom: 8px;\n}\n\n.tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\n.tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\n.tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\n.tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "ProductAdditionComponent",
            "id": "component-ProductAdditionComponent-19b4f3e5e1fecf143cf4c091b7fb49ba",
            "file": "src/modules/features/product/product-addition/product-addition.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-addition",
            "styleUrls": [
                "./product-addition.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-addition.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "objectComponentBuilder",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "any"
                }
            ],
            "outputsClass": [
                {
                    "name": "productAdditionAddProduct",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "additionFormControl",
                    "defaultValue": "new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\")\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "events",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "methodsClass": [
                {
                    "name": "addEvent",
                    "args": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "event",
                            "type": "MatDatepickerInputEvent<Date>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "event",
                            "type": "MatDatepickerInputEvent<Date>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { MatDatepickerInputEvent } from '@angular/material/datepicker';\n\n@Component({\n  selector: 'app-product-addition',\n  templateUrl: './product-addition.component.html',\n  styleUrls: ['./product-addition.component.scss']\n})\nexport class ProductAdditionComponent implements OnInit {\n\n  @Input() objectComponentBuilder: any;\n  @Output() productAdditionAddProduct = new EventEmitter<string>();\n\n  public additionFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\")\n  ]);\n  events: string[] = [];\n\n  constructor() { }\n\n  ngOnInit(): void {\n    console.log(\"objectComponentBuilder\", this.objectComponentBuilder);\n  }\n\n  addEvent(type: string, event: MatDatepickerInputEvent<Date>) {\n    this.events.push(`${type}: ${event.value}`);\n    console.log(\"addEvent this.events\", this.events);\n    \n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./product-addition.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 19
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h1>\n    {{ objectComponentBuilder.name ? objectComponentBuilder.name : 'lol' }}\n</h1>\n\n<p>{{ objectComponentBuilder.description ? objectComponentBuilder.description : 'lol' }}</p>\n\n<form>\n\n    <mat-form-field>\n        <mat-label>Date</mat-label>\n        <input matInput [matDatepicker]=\"picker\" (dateInput)=\"addEvent('input', $event)\"\n            (dateChange)=\"addEvent('change', $event)\">\n        <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n        <mat-datepicker #picker></mat-datepicker>\n    </mat-form-field>\n\n    <mat-form-field>\n        <input type=\"text\" placeholder=\"Size\" aria-label=\"Number\" matInput [formControl]=\"additionFormControl\">\n    </mat-form-field>\n\n\n    <button mat-stroked-button color=\"primary\">Add</button>\n\n</form>"
        },
        {
            "name": "ProductDefinitionComponent",
            "id": "component-ProductDefinitionComponent-8155f1ae32ac21a8c4c1e8288c021e46",
            "file": "src/modules/features/product/product-definition/product-definition.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-definition",
            "styleUrls": [
                "./product-definition.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-definition.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "pokedex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "requestService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "RequestService",
                    "optional": false,
                    "description": "",
                    "line": 17,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getPokedex",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPokemon",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "getPokemonAbility",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { RequestService } from '../../../../services/request.service';\nimport { RequestType, RequestURL } from '../../../../models/request.model';\n\nimport { HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-product-definition',\n  templateUrl: './product-definition.component.html',\n  styleUrls: ['./product-definition.component.scss']\n})\nexport class ProductDefinitionComponent implements OnInit {\n\n  public pokedex: Array<any>\n\n  constructor(\n    public requestService: RequestService,\n    private httpClient: HttpClient,\n  ) {\n    this.pokedex = new Array();\n  }\n\n  ngOnInit(): void {\n    console.log(\"Starting ngOnInit request\");\n\n    this.getPokemonAbility();\n    this.getPokemon();\n    this.getPokedex();\n  }\n\n  getPokemonAbility() {\n    this.httpClient.get(\"https://pokeapi.co/api/v2/ability/4/\")\n      .subscribe((data: any[]) => {\n        console.error(\"subscribe\");\n        console.log(data);\n      })\n  }\n\n  getPokemon() {\n    this.httpClient.get(\"https://pokeapi.co/api/v2/pokemon/ditto/\")\n      .toPromise()\n      .then((responseData: any) => {\n        console.error(\"toPromise\");\n        console.log(\"responseData\", responseData);\n      }).catch((errorResponseData) => {\n        console.log(\"errorResponseData\", errorResponseData);\n      })\n  }\n\n  getPokedex() {\n    this.requestService.request(RequestType.GET, RequestURL.POKEMON_POKEDEX, null, null)\n      .then((pokedexData: any) => {\n        console.error(\"request\");\n        console.log(\"pokedexData\", pokedexData);\n        this.pokedex = pokedexData.body?.results;\n        console.log(\"this.pokedex\", this.pokedex);\n      })\n      .catch((pokedexError: any) => {\n        console.error(\"pokedexError\", pokedexError);\n      })\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".item-strong {\n    font-weight: bolder;\n}\n\n.item-light {\n    font-style: italic;\n}\n",
                    "styleUrl": "./product-definition.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "requestService",
                        "type": "RequestService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>product-definition works!</p>\n\n<!-- product/resume\n<br>\nWill load the component on the same page\n<br><br>\nproduct/final\n<br>\nWill load the component on a new page -->\n\n<section>\n    <h3>\n        Pokedex\n    </h3>\n    <h4>\n        Name:\n    </h4>\n    <span *ngIf=\"pokedex.length == 0\">\n        Loading...\n    </span>\n    <div *ngFor=\"let poke of pokedex; let i = index\" [ngClass]=\"{'item-strong': i % 2 == 0 ? true : false, 'item-light': !(i % 2 == 0) }\">\n        {{ i + 1 }} -\n        <span [ngStyle]=\"{'color': i % 2 == 0 ? 'blue' : 'red' }\">\n            {{ poke.name }}\n        </span>\n    </div>\n</section>\n\n<router-outlet></router-outlet>\n\n<!-- <span [ngStyle]=\"{'color': pokedex[i].name == 'national' ? 'blue' : 'red' }\"> -->\n\n<!-- https://angular.io/guide/template-syntax -->\n<!-- <span [ngStyle]=\"{'color': i % 2 == 0 ? 'blue' : 'red' }\">\n<span (click)=\"{'color': i % 2 == 0 ? 'blue' : 'red' }\">\n<span [(ngModel)] = \"VARIABLE\"> -->"
        },
        {
            "name": "ProductResumeComponent",
            "id": "component-ProductResumeComponent-7f8c1a2460dc15e42cc2d368a56cdb43",
            "file": "src/modules/features/product/product-resume/product-resume.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-product-resume",
            "styleUrls": [
                "./product-resume.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./product-resume.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "displayedColumns",
                    "defaultValue": "['name', 'date', 'size']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "filteredOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string[]>",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "objectComponentResume",
                    "defaultValue": "{\n    name: \"title\",\n    description: \"description is here\"\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "options",
                    "defaultValue": "['Example', 'Here', 'There', 'And', 'Something Else', 'Again', 'Movie', 'Song']",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "products",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "weightFormControl",
                    "defaultValue": "new FormControl('', [\n    Validators.required\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "_filter",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string[]",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        121
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\nimport { GET_PRODUCTS_MOCKS } from '../../../../models/products-mocks.model';\nimport { Observable } from 'rxjs';\nimport { map, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-product-resume',\n  templateUrl: './product-resume.component.html',\n  styleUrls: ['./product-resume.component.scss']\n})\nexport class ProductResumeComponent implements OnInit {\n\n  public filteredOptions: Observable<string[]>;\n  public options: string[] = ['Example', 'Here', 'There', 'And', 'Something Else', 'Again', 'Movie', 'Song'];\n  public weightFormControl = new FormControl('', [\n    Validators.required\n  ]);\n\n  public displayedColumns: string[] = ['name', 'date', 'size'];\n  public objectComponentResume: any = {\n    name: \"title\",\n    description: \"description is here\"\n  }\n  public products;\n\n  constructor() {\n    this.products = GET_PRODUCTS_MOCKS();\n  }\n\n  ngOnInit(): void {\n    console.log(\"this.products\", this.products);\n    this.filteredOptions = this.weightFormControl.valueChanges.pipe(\n      startWith(''),\n      map(value => this._filter(value))\n    );\n  }\n\n  private _filter(value: string): string[] {\n    const filterValue = value.toLowerCase();\n\n    return this.options.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".table {\n    width: 100%;\n}\n\ntable.mat-table {\n    width: 90%;\n}",
                    "styleUrl": "./product-resume.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 25
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<p>product-RESUME works!</p>\n\n<form>\n    <!-- <mat-form-field class=\"shipping-input-full-width\">\n        <input matInput placeholder=\"*Weight\" [formControl]=\"weightFormControl\">\n    </mat-form-field> -->\n\n    <mat-form-field class=\"shipping-input-full-width\">\n        <input type=\"text\" placeholder=\"Lets write something\" aria-label=\"Number\" matInput\n            [formControl]=\"weightFormControl\" [matAutocomplete]=\"auto\">\n        <mat-autocomplete autoActiveFirstOption #auto=\"matAutocomplete\">\n            <mat-option *ngFor=\"let option of filteredOptions | async\" [value]=\"option\">\n                {{option}}\n            </mat-option>\n        </mat-autocomplete>\n    </mat-form-field>\n</form>\n\n<section class=\"table\">\n    <table mat-table [dataSource]=\"products\" class=\"mat-elevation-z8\">\n        <!--- \n            Note that these columns can be defined in any order.\n            The actual rendered columns are set as a property on the row definition\" \n        -->\n\n        <!-- Name Column -->\n        <ng-container matColumnDef=\"name\">\n            <th mat-header-cell *matHeaderCellDef> Name </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\n        </ng-container>\n\n        <!-- Date Column -->\n        <ng-container matColumnDef=\"date\">\n            <th mat-header-cell *matHeaderCellDef> Date </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.birthday | date:\"fullDate\" }} </td>\n        </ng-container>\n\n        <!-- Size Column -->\n        <ng-container matColumnDef=\"size\">\n            <th mat-header-cell *matHeaderCellDef> Size </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.size | fileSize }} </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n    </table>\n</section>\n\n<section>\n    <app-product-addition [objectComponentBuilder]=\"objectComponentResume\"></app-product-addition>\n</section>"
        },
        {
            "name": "ShippingButtonComponent",
            "id": "component-ShippingButtonComponent-380d265bc7e1374949a61be4388ea6af",
            "file": "src/modules/shared/shipping-button/shipping-button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-button",
            "styleUrls": [
                "./shipping-button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "string"
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClicked",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "onClickButton",
                    "args": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "event",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-shipping-button',\n  templateUrl: './shipping-button.component.html',\n  styleUrls: ['./shipping-button.component.scss']\n})\nexport class ShippingButtonComponent implements OnInit {\n\n\n  @Input() buttonTitle: string;\n  @Output() buttonClicked = new EventEmitter<any>();\n\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  onClickButton(event) {\n    this.buttonClicked.emit(event);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".shipping-button {\n    width: 200px;\n    margin: 0px 15px;\n}",
                    "styleUrl": "./shipping-button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<button class=\"shipping-button\" mat-raised-button color=\"primary\" (click)=\"onClickButton($event)\">{{buttonTitle}}</button>"
        },
        {
            "name": "ShippingHeaderComponent",
            "id": "component-ShippingHeaderComponent-77f9e558361e8040086d7bc3a659066b",
            "file": "src/modules/shared/shipping-header/shipping-header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-header",
            "styleUrls": [
                "./shipping-header.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-header.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "step",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "number"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-shipping-header',\n  templateUrl: './shipping-header.component.html',\n  styleUrls: ['./shipping-header.component.css']\n})\nexport class ShippingHeaderComponent implements OnInit {\n\n  @Input() public step: number;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n    display: flex;\n    align-items: center;\n}\n\nh5 {}\n\np {\n    width: 100%;\n    text-align: right;\n    font-size: 12px;\n}\n",
                    "styleUrl": "./shipping-header.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<section>\n  <h5>\n    Progress\n  </h5>\n  <p>\n    Step {{step + 1}} of 5\n  </p>\n</section>"
        },
        {
            "name": "ShippingLabelComponent",
            "id": "component-ShippingLabelComponent-ad4f13bdc6a7137b2917037ed9324b34",
            "file": "src/modules/features/shipping/shipping-label/shipping-label.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-label",
            "styleUrls": [
                "./shipping-label.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-label.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "objectShippingResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string"
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "result",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input } from '@angular/core';\n\n@Component({\n  selector: 'app-shipping-label',\n  templateUrl: './shipping-label.component.html',\n  styleUrls: ['./shipping-label.component.css']\n})\nexport class ShippingLabelComponent implements OnInit {\n\n  @Input() objectShippingResult: string;\n\n  public result;\n\n  constructor() { }\n\n  ngOnInit() {\n    this.result = JSON.stringify(this.objectShippingResult, undefined, 2);\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".shipping-label-json-box {\n    min-width: 350px;\n    width: 100%;\n    border: 2px solid black;\n    padding: 15px;\n    background-color: #eeeeee;\n    -webkit-box-shadow: 7px 7px 7px -2px rgba(0, 0, 0, 0.41);\n    -moz-box-shadow: 7px 7px 7px -2px rgba(0, 0, 0, 0.41);\n    box-shadow: 7px 7px 7px -2px rgba(0, 0, 0, 0.41);\n}\n",
                    "styleUrl": "./shipping-label.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h4>\n  Shipping Label Result\n</h4>\n\n<pre class=\"shipping-label-json-box\">{{result}}</pre>"
        },
        {
            "name": "ShippingLabelMakerComponent",
            "id": "component-ShippingLabelMakerComponent-20832b2fc78c968f246b3f9656fcf6ee",
            "file": "src/modules/features/shipping/shipping-label-maker/shipping-label-maker.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-label-maker",
            "styleUrls": [
                "./shipping-label-maker.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-label-maker.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "authenticationService",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AuthenticationService",
                    "optional": false,
                    "description": "",
                    "line": 31,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "currentStep",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "loggedUser",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "objectResult",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": false,
                    "description": "",
                    "line": 25,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "optionChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingOptionComponent",
                    "optional": false,
                    "description": "",
                    "line": 21,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ShippingOptionComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "route",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ActivatedRoute",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "shippingRecieverChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingReceiverAddressComponent",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ShippingReceiverAddressComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "shippingSenderChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingSenderAddressComponent",
                    "optional": false,
                    "description": "",
                    "line": 18,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ShippingSenderAddressComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "weightChild",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ShippingWeightComponent",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "ShippingWeightComponent, {static: false}"
                        }
                    ],
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "wizard",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "WizardService",
                    "optional": false,
                    "description": "",
                    "line": 30,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "wizardButtonAction",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "complete",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 65,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "logout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 41,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "nextAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 73,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 37,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "previousAction",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 69,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "registerAction",
                    "args": [
                        {
                            "name": "action",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "action",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "testUser",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "validateComponentResponse",
                    "args": [
                        {
                            "name": "objectFromComponent",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "boolean",
                    "typeParameters": [],
                    "line": 105,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "objectFromComponent",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ActivatedRoute } from '@angular/router';\nimport { Component, OnInit, ViewChild } from '@angular/core';\nimport { WizardService } from '../../../../services/wizard.service';\nimport { ShippingSenderAddressComponent } from '../shipping-sender-address/shipping-sender-address.component';\nimport { ShippingReceiverAddressComponent } from '../shipping-receiver-address/shipping-receiver-address.component';\nimport { ShippingWeightComponent } from '../shipping-weight/shipping-weight.component';\nimport { ShippingOptionComponent } from '../shipping-option/shipping-option.component';\nimport { WizardAction } from '../../../../interfaces/i.shipping-label-steps';\nimport { AuthenticationService } from '../../../../services/authentication.service';\n\n@Component({\n  selector: 'app-shipping-label-maker',\n  templateUrl: './shipping-label-maker.component.html',\n  styleUrls: ['./shipping-label-maker.component.scss']\n})\nexport class ShippingLabelMakerComponent implements OnInit {\n\n  @ViewChild(ShippingSenderAddressComponent, { static: false }) private shippingSenderChild: ShippingSenderAddressComponent;\n  @ViewChild(ShippingReceiverAddressComponent, { static: false }) private shippingRecieverChild: ShippingReceiverAddressComponent;\n  @ViewChild(ShippingWeightComponent, { static: false }) private weightChild: ShippingWeightComponent;\n  @ViewChild(ShippingOptionComponent, { static: false }) private optionChild: ShippingOptionComponent;\n\n  public currentStep: number;\n  public wizardButtonAction;\n  public objectResult: object;\n  public loggedUser: string;\n\n  constructor(\n    public route: ActivatedRoute,\n    public wizard: WizardService,\n    public authenticationService: AuthenticationService,\n  ) {\n    this.wizardButtonAction = WizardAction\n    this.currentStep = 0;\n  }\n\n  ngOnInit() {\n    this.loggedUser = this.route.snapshot.paramMap.get('name');\n  }\n\n  logout() {\n    this.authenticationService.deleteUser();\n  }\n\n  testUser(){\n    this.authenticationService.getUser();\n  }\n\n  registerAction(action) {\n    switch (action) {\n      case WizardAction.Next:\n        this.nextAction();\n        break;\n      case WizardAction.Prev:\n        this.previousAction();\n        break;\n      case WizardAction.End:\n        this.complete();\n        break;\n      default:\n        break;\n    }\n  }\n\n  complete() {\n    this.currentStep = 0;\n  }\n\n  previousAction() {\n    this.currentStep <= 0 ? this.currentStep : this.currentStep--;\n  }\n\n  nextAction() {\n    switch (this.currentStep) {\n      case 0:\n        if (this.validateComponentResponse(this.shippingSenderChild.getComponentState())) {\n          this.wizard.setSender(this.shippingSenderChild.getComponentState().form);\n        }\n        break;\n\n      case 1:\n        if (this.validateComponentResponse(this.shippingRecieverChild.getComponentState())) {\n          this.wizard.setReceiver(this.shippingRecieverChild.getComponentState().form);\n        }\n        break;\n\n      case 2:\n        if (this.validateComponentResponse(this.weightChild.getComponentState())) {\n          this.wizard.setWeight(this.weightChild.getComponentState().form);\n        }\n        break;\n\n      case 3:\n        if (this.validateComponentResponse(this.optionChild.getComponentState())) {\n          this.wizard.setShippingOption(this.optionChild.getComponentState().form);\n        }\n        this.objectResult = this.wizard.getFinalResult();\n        break;\n      default:\n        break;\n    }\n\n  }\n\n  validateComponentResponse(objectFromComponent) {\n    if (objectFromComponent.valid) {\n      this.currentStep >= 4 ? this.currentStep : this.currentStep++;\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".user {\n    margin-right: 5px;\n    color: gray;\n    font-family: monospace;\n    font-style: italic;\n\n    &-info {\n        position: absolute;\n        left: 0;\n    }\n\n    &-logout {\n        position: absolute;\n        right: 0;\n    }\n}\n\n.shipping-maker {\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n\n    &-title {\n        text-align: left;\n    }\n\n    &-buttons {\n        text-align: center;\n    }\n}\n",
                    "styleUrl": "./shipping-label-maker.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "wizard",
                        "type": "WizardService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 26,
                "jsdoctags": [
                    {
                        "name": "route",
                        "type": "ActivatedRoute",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "wizard",
                        "type": "WizardService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "authenticationService",
                        "type": "AuthenticationService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"shipping-maker\">\n  <div class=\"user\">\n    <span class=\"user-info\">\n      Logged as: {{loggedUser}}\n    </span>\n    <span (click)=\"logout()\" class=\"user-logout\">\n      Logout\n    </span>\n  </div>\n  \n  <h1 class=\"shipping-maker-title\">\n    Shipping Label Maker\n  </h1>\n\n  <section class=\"shipping-maker-box\">\n    <app-shipping-header [step]=\"currentStep\"></app-shipping-header>\n\n    <!-- SENDER ADDRESS -->\n    <app-shipping-sender-address *ngIf=\"currentStep == 0\"></app-shipping-sender-address>\n\n    <!-- RECIEVER ADDRESS -->\n    <app-shipping-receiver-address *ngIf=\"currentStep == 1\"></app-shipping-receiver-address>\n\n    <!-- SHIPPING WEIGHT -->\n    <app-shipping-weight *ngIf=\"currentStep == 2\"></app-shipping-weight>\n\n    <!-- OPTION TYPE -->\n    <app-shipping-option *ngIf=\"currentStep == 3\"></app-shipping-option>\n\n    <!-- SHIPPING RESULT -->\n    <app-shipping-label *ngIf=\"currentStep == 4\" [objectShippingResult]=\"objectResult\"></app-shipping-label>\n\n    <br>\n    <div class=\"shipping-maker-buttons\">\n      <div *ngIf=\"currentStep != 4\">\n        <app-shipping-button (buttonClicked)=\"registerAction(wizardButtonAction.Prev)\" buttonTitle=\"Previous\">\n        </app-shipping-button>\n        <app-shipping-button (buttonClicked)=\"registerAction(wizardButtonAction.Next)\" buttonTitle=\"Next\">\n        </app-shipping-button>\n      </div>\n      <div *ngIf=\"currentStep == 4\">\n        <app-shipping-button (buttonClicked)=\"registerAction(wizardButtonAction.End)\" buttonTitle=\"Finish\">\n        </app-shipping-button>\n      </div>\n    </div>\n\n    <!-- <app-shipping-button (buttonClicked)=\"testUser()\" buttonTitle=\"TEST\"></app-shipping-button> -->\n  </section>\n</div>"
        },
        {
            "name": "ShippingOptionComponent",
            "id": "component-ShippingOptionComponent-a6e1732012d62a28c12b43af6c533f3e",
            "file": "src/modules/features/shipping/shipping-option/shipping-option.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-option",
            "styleUrls": [
                "./shipping-option.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-option.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "listOfOptions",
                    "defaultValue": "new Array",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Array<any>",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "optionFormControl",
                    "defaultValue": "new FormControl('', [Validators.required])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getComponentState",
                    "args": [],
                    "optional": false,
                    "returnType": "{ valid: boolean; form: any; }",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "optionSelected",
                    "args": [
                        {
                            "name": "option",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "option",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { GET_LIST_ITEMS_NLP } from '../../../../models/shipping-options.model';\n\n@Component({\n  selector: 'app-shipping-option',\n  templateUrl: './shipping-option.component.html',\n  styleUrls: ['./shipping-option.component.css']\n})\nexport class ShippingOptionComponent implements OnInit {\n\n  public listOfOptions: Array<any> = new Array;\n  public optionFormControl = new FormControl('', [Validators.required]);\n  public errorMark: boolean;\n\n  constructor() {\n    this.listOfOptions = GET_LIST_ITEMS_NLP();\n    this.errorMark = false;\n  }\n\n  ngOnInit() {\n  }\n\n  optionSelected(option) {\n    console.log(\"optionSelected\", option);\n  }\n\n  getComponentState() {\n    if (!this.optionFormControl.valid) {\n      this.errorMark = false;\n    } else {\n      this.errorMark = true;\n    }\n    return { valid: this.errorMark, form: this.optionFormControl.value };\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./shipping-option.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h4>\n  Select a shipping option\n</h4>\n\n\n<form>\n  <mat-form-field class=\"shipping-input-full-width\">\n    <mat-label>Shipping Option</mat-label>\n    <mat-select (selectionChange)=\"optionSelected($event)\" [formControl]=\"optionFormControl\">\n      <mat-option *ngFor=\"let option of listOfOptions\" [value]=\"option.value\">{{option.name}}</mat-option>\n    </mat-select>\n  </mat-form-field>\n</form>\n\n\n<p class=\"shipping-warn-text\" *ngIf=\"!errorMark\">\n  You must select an option\n</p>\n"
        },
        {
            "name": "ShippingReceiverAddressComponent",
            "id": "component-ShippingReceiverAddressComponent-dbb95681277b30f82ed788e55b39747d",
            "file": "src/modules/features/shipping/shipping-receiver-address/shipping-receiver-address.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-receiver-address",
            "styleUrls": [
                "./shipping-receiver-address.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-receiver-address.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "shippingReceiverAddressForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getComponentState",
                    "args": [],
                    "optional": false,
                    "returnType": "{ valid: boolean; form: any; }",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-shipping-receiver-address',\n  templateUrl: './shipping-receiver-address.component.html',\n  styleUrls: ['./shipping-receiver-address.component.scss']\n})\nexport class ShippingReceiverAddressComponent implements OnInit {\n\n  public shippingReceiverAddressForm: FormGroup;\n  public errorMark: boolean;\n\n  constructor() {\n    this.errorMark = false;\n    this.shippingReceiverAddressForm = new FormGroup({\n      name: new FormControl,\n      street: new FormControl,\n      state: new FormControl('', Validators.required),\n      zip: new FormControl('', Validators.required),\n      city: new FormControl\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  getComponentState() {\n    if (!this.shippingReceiverAddressForm.valid) {\n      this.errorMark = false;\n    } else {\n      this.errorMark = true;\n    }\n    return { valid: this.errorMark, form: this.shippingReceiverAddressForm.value };\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles.scss\";\n",
                    "styleUrl": "./shipping-receiver-address.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h4>\n  Enter the receiver's address\n</h4>\n\n<form [formGroup]=\"shippingReceiverAddressForm\">\n  <mat-form-field class=\"shipping-input-full-width\">\n    <input matInput placeholder=\"Name\" formControlName=\"name\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"shipping-input-full-width\">\n    <input matInput placeholder=\"Street\" formControlName=\"street\">\n  </mat-form-field>\n  <br>\n  <mat-form-field>\n    <input matInput placeholder=\"City\" formControlName=\"city\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder=\"*State\" formControlName=\"state\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder=\"*Zip\" formControlName=\"zip\">\n  </mat-form-field>\n</form>\n\n<p class=\"shipping-warn-text\" *ngIf=\"!errorMark\">\n  The fields <strong>State</strong> and <strong>Zip</strong> are obligatory\n</p>\n"
        },
        {
            "name": "ShippingSelectComponent",
            "id": "component-ShippingSelectComponent-31577882cb2186ffa9547089853f1a7f",
            "file": "src/modules/shared/shipping-select/shipping-select.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-select",
            "styleUrls": [
                "./shipping-select.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-select.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "selected",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": false,
                    "description": "",
                    "line": 10,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-shipping-select',\n  templateUrl: './shipping-select.component.html',\n  styleUrls: ['./shipping-select.component.scss']\n})\nexport class ShippingSelectComponent implements OnInit {\n\n  public selected: any;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./shipping-select.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<mat-form-field>\n  <mat-label>Select an option</mat-label>\n  <mat-select [(value)]=\"selected\">\n    <mat-option>None</mat-option>\n    <mat-option value=\"1\">Ground</mat-option>\n    <mat-option value=\"2\">Priority</mat-option>\n  </mat-select>\n</mat-form-field>\n\n<p>You selected: {{selected}}</p>"
        },
        {
            "name": "ShippingSenderAddressComponent",
            "id": "component-ShippingSenderAddressComponent-9ff4e01f461bb2f88da9783d657d766a",
            "file": "src/modules/features/shipping/shipping-sender-address/shipping-sender-address.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-sender-address",
            "styleUrls": [
                "./shipping-sender-address.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-sender-address.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "shippingSenderAddressForm",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "FormGroup",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getComponentState",
                    "args": [],
                    "optional": false,
                    "returnType": "{ valid: boolean; form: any; }",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-shipping-sender-address',\n  templateUrl: './shipping-sender-address.component.html',\n  styleUrls: ['./shipping-sender-address.component.scss']\n})\nexport class ShippingSenderAddressComponent implements OnInit {\n\n  public shippingSenderAddressForm: FormGroup;\n  public errorMark: boolean;\n\n  constructor() {\n    this.errorMark = false;\n    this.shippingSenderAddressForm = new FormGroup({\n      name: new FormControl('', Validators.required),\n      street: new FormControl,\n      state: new FormControl,\n      zip: new FormControl,\n      city: new FormControl('', Validators.required)\n    })\n  }\n\n  ngOnInit() {\n  }\n\n  getComponentState() {\n    if (!this.shippingSenderAddressForm.valid) {\n      this.errorMark = false;\n    } else {\n      this.errorMark = true;\n    }\n    return { valid: this.errorMark, form: this.shippingSenderAddressForm.value };\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import \"../../../../styles.scss\";\n",
                    "styleUrl": "./shipping-sender-address.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 12
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h4>\n  Enter the sender's address\n</h4>\n\n<form [formGroup]=\"shippingSenderAddressForm\">\n  <mat-form-field class=\"shipping-input-full-width\">\n    <input matInput placeholder=\"*Name\" formControlName=\"name\">\n  </mat-form-field>\n  <br>\n  <mat-form-field class=\"shipping-input-full-width\">\n    <input matInput placeholder=\"Street\" formControlName=\"street\">\n  </mat-form-field>\n  <br>\n  <mat-form-field>\n    <input matInput placeholder=\"*City\" formControlName=\"city\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder=\"State\" formControlName=\"state\">\n  </mat-form-field>\n  <mat-form-field>\n    <input matInput placeholder=\"Zip\" formControlName=\"zip\">\n  </mat-form-field>\n</form>\n\n<p class=\"shipping-warn-text\" *ngIf=\"!errorMark\">\n  The fields\n  <strong>\n    Name\n  </strong>\n  and\n  <strong>\n    City\n  </strong>\n  are obligatory\n</p>\n\n<!-- \n{\n  from: {\n  name: \"John Smith\", street: \"131 Dartmouth St\", city: \"Boston\",\n  state: \"MA\", zip: \"02116\"\n  },\n  to: {\n  name: \"Linda Jackson\", street: \"40 Fulton St\", city: \"New York\", state: \"NY\",\n  zip: \"10038\"\n  }\n  weight: 2\n  shippingOption:\n}\n   -->"
        },
        {
            "name": "ShippingWeightComponent",
            "id": "component-ShippingWeightComponent-530a15ebe02476f8ec569e355a2cbbc4",
            "file": "src/modules/features/shipping/shipping-weight/shipping-weight.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-shipping-weight",
            "styleUrls": [
                "./shipping-weight.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./shipping-weight.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "errorMark",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15,
                    "modifierKind": [
                        123
                    ]
                },
                {
                    "name": "weightFormControl",
                    "defaultValue": "new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\")\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        123
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "getComponentState",
                    "args": [],
                    "optional": false,
                    "returnType": "{ valid: boolean; form: any; }",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, OnInit } from '@angular/core';\nimport { FormControl, Validators, FormGroup, FormBuilder } from '@angular/forms';\n\n@Component({\n  selector: 'app-shipping-weight',\n  templateUrl: './shipping-weight.component.html',\n  styleUrls: ['./shipping-weight.component.scss']\n})\nexport class ShippingWeightComponent implements OnInit {\n\n  public weightFormControl = new FormControl('', [\n    Validators.required,\n    Validators.pattern(\"^[0-9]*$\")\n  ]);\n  public errorMark: boolean;\n\n  constructor() {\n    this.errorMark = false;\n  }\n\n  ngOnInit() {\n  }\n\n  getComponentState() {\n    if (!this.weightFormControl.valid) {\n      this.errorMark = false;\n    } else {\n      this.errorMark = true;\n    }\n    return { valid: this.errorMark, form: this.weightFormControl.value };\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "",
                    "styleUrl": "./shipping-weight.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 15
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<h4>\n  Enter shipping weight\n</h4>\n\n<!-- <app-shipping-input inputTitle=\"Weight\"></app-shipping-input> -->\n\n<form>\n  <mat-form-field class=\"shipping-input-full-width\">\n    <input matInput placeholder=\"*Weight\" [formControl]=\"weightFormControl\">\n  </mat-form-field>\n</form>\n\n<p class=\"shipping-warn-text\" *ngIf=\"!errorMark\">\n  The field <strong>Weight</strong> is obligatory and must be a number\n</p>"
        }
    ],
    "modules": [
        {
            "name": "AppModule",
            "id": "module-AppModule-01d754ef80acfd4b85a69fd60d36230d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app.module.ts",
            "methods": [],
            "sourceCode": "import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n/* Material Imports */\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\n/* ! Material Imports */\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppComponent } from './app.component';\nimport { LoginComponent } from '../modules/features/login/login.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n  ],\n  imports: [\n\n    AppRoutingModule,\n    HttpClientModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n\n    /* For sharing Modules we import CommonModule */\n    BrowserModule,\n    BrowserAnimationsModule,\n    /* ! For sharing Modules we import CommonModule */\n\n    /* Material Imports */\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    /* ! Material Imports */\n  ],\n  exports: [],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "AppComponent"
                        },
                        {
                            "name": "LoginComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "AppRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": [
                        {
                            "name": "AppComponent"
                        }
                    ]
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "AppRoutingModule",
            "id": "module-AppRoutingModule-b34c10b8ac269e2c41cd6dc5874e4601",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/app/app-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from '../modules/features/login/login.component';\nimport { AuthGuard } from '../guards/auth.guard';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'shipping',\n    loadChildren: '../modules/features/shipping/shipping.module#ShippingModule',\n    canActivate: [AuthGuard]\n  },\n  {\n    path: 'product',\n    loadChildren: '../modules/features/product/product.module#ProductModule'\n  },\n  /* { path: 'shipping/shipping-label-maker/:name', component: ShippingLabelMakerComponent }, */\n  { path: '', redirectTo: '/login', pathMatch: 'full' },\n  { path: '**', redirectTo: '/login', pathMatch: 'full' }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "PipesModule",
            "id": "module-PipesModule-888b00550af880863e1036acf0c9d1da",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/pipes/pipes.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FileSizePipe } from './file-size.pipe';\n\n@NgModule({\n  declarations: [\n    FileSizePipe,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    FileSizePipe,\n  ]\n})\nexport class PipesModule { }\n\n/* Lazy pipes, imported only on specific modules -> product.module */",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "FileSizePipe"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "FileSizePipe"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductModule",
            "id": "module-ProductModule-6991acbabd816563027b20585d118a06",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/modules/features/product/product.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ProductRoutingModule } from './product-routing.module';\nimport { ProductDefinitionComponent } from './product-definition/product-definition.component';\nimport { ProductResumeComponent } from './product-resume/product-resume.component';\nimport { SharedModule } from '../../../modules/shared/shared.module';\nimport { PipesModule } from 'src/pipes/pipes.module';\nimport { ProductAdditionComponent } from './product-addition/product-addition.component';\n\n\n@NgModule({\n  /* Lazy Loading Modules */\n  declarations: [\n    ProductDefinitionComponent,\n    ProductResumeComponent,\n    ProductAdditionComponent,\n  ],\n  imports: [\n    SharedModule,\n    PipesModule,\n\n    CommonModule,\n    ProductRoutingModule\n  ]\n})\nexport class ProductModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ProductAdditionComponent"
                        },
                        {
                            "name": "ProductDefinitionComponent"
                        },
                        {
                            "name": "ProductResumeComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "ProductRoutingModule"
                        },
                        {
                            "name": "SharedModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ProductRoutingModule",
            "id": "module-ProductRoutingModule-6a4852a79d2d82008d00dc4c9d739b54",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/modules/features/product/product-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ProductDefinitionComponent } from './product-definition/product-definition.component';\nimport { ProductResumeComponent } from './product-resume/product-resume.component';\nimport { AuthGuard } from '../../../guards/auth.guard';\n\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductDefinitionComponent,\n    children: [\n      {\n        path: 'resume',\n        component: ProductResumeComponent,\n        canActivate: [AuthGuard]\n      }\n    ],\n  },\n  {\n    path: 'final',\n    component: ProductResumeComponent,\n    children: []\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ProductRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "SharedModule",
            "id": "module-SharedModule-30a763fffd9cc335c69f3e6b9d7fed30",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/modules/shared/shared.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShippingButtonComponent } from './shipping-button/shipping-button.component';\nimport { ShippingHeaderComponent } from './shipping-header/shipping-header.component';\nimport { ShippingSelectComponent } from './shipping-select/shipping-select.component';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatTableModule } from '@angular/material/table';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n@NgModule({\n  declarations: [\n    ShippingButtonComponent,\n    ShippingHeaderComponent,\n    ShippingSelectComponent,\n\n  ],\n  imports: [\n    CommonModule,\n\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatTableModule,\n    CdkTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    ShippingButtonComponent,\n    ShippingHeaderComponent,\n    ShippingSelectComponent,\n\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatAutocompleteModule,\n    MatTableModule,\n    CdkTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n\n    FormsModule,\n    ReactiveFormsModule,\n  ]\n})\nexport class SharedModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShippingButtonComponent"
                        },
                        {
                            "name": "ShippingHeaderComponent"
                        },
                        {
                            "name": "ShippingSelectComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ShippingButtonComponent"
                        },
                        {
                            "name": "ShippingHeaderComponent"
                        },
                        {
                            "name": "ShippingSelectComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShippingModule",
            "id": "module-ShippingModule-68dfcba39c7fa0107478909fff18d13a",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/modules/features/shipping/shipping.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShippingRoutingModule } from './shipping-routing.module';\nimport { ShippingLabelComponent } from './shipping-label/shipping-label.component';\nimport { ShippingSenderAddressComponent } from './shipping-sender-address/shipping-sender-address.component';\nimport { ShippingReceiverAddressComponent } from './shipping-receiver-address/shipping-receiver-address.component';\nimport { ShippingWeightComponent } from './shipping-weight/shipping-weight.component';\nimport { ShippingOptionComponent } from './shipping-option/shipping-option.component';\nimport { ShippingLabelMakerComponent } from './shipping-label-maker/shipping-label-maker.component';\n\nimport { SharedModule } from '../../../modules/shared/shared.module';\n\n\n@NgModule({\n  /* Lazy Loading Modules */\n  declarations: [\n    ShippingLabelComponent,\n    ShippingSenderAddressComponent,\n    ShippingReceiverAddressComponent,\n    ShippingWeightComponent,\n    ShippingOptionComponent,\n    ShippingLabelMakerComponent,\n\n  ],\n  imports: [\n    SharedModule,\n\n    CommonModule,\n    ShippingRoutingModule,\n  ]\n})\nexport class ShippingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ShippingLabelComponent"
                        },
                        {
                            "name": "ShippingLabelMakerComponent"
                        },
                        {
                            "name": "ShippingOptionComponent"
                        },
                        {
                            "name": "ShippingReceiverAddressComponent"
                        },
                        {
                            "name": "ShippingSenderAddressComponent"
                        },
                        {
                            "name": "ShippingWeightComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": [
                        {
                            "name": "SharedModule"
                        },
                        {
                            "name": "ShippingRoutingModule"
                        }
                    ]
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "ShippingRoutingModule",
            "id": "module-ShippingRoutingModule-d4c7385208d58860be524f51691c14e4",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "src/modules/features/shipping/shipping-routing.module.ts",
            "methods": [],
            "sourceCode": "import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ShippingLabelMakerComponent } from './shipping-label-maker/shipping-label-maker.component';\n\n\nconst routes: Routes = [\n  {\n    path: 'shipping-label-maker/:name',\n    component: ShippingLabelMakerComponent,\n    children: [],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ShippingRoutingModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": []
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": []
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false\n}"
            },
            {
                "name": "Large",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LIST_PRODUCTS_MOCK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/models/products-mocks.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any",
                "defaultValue": "[\n    {\n        name: \"1\",\n        birthday: new Date(1988, 3, 16),\n        size: 212320109,\n    },\n    {\n        name: \"2\",\n        birthday: new Date(1989, 3, 25),\n        size: 21210109,\n    },\n    {\n        name: \"3\",\n        birthday: new Date(2020, 0, 15),\n        size: 2121109,\n    },\n    {\n        name: \"4\",\n        birthday: new Date(2019, 1, 30),\n        size: 562120109,\n    }\n]"
            },
            {
                "name": "LIST_SHIPPING_OPTIONS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/models/shipping-options.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IShippingOptions[]",
                "defaultValue": "[\n    {\n        name: \"Ground\",\n        value: 1\n    },\n    {\n        name: \"Priority\",\n        value: 2\n    }\n]"
            },
            {
                "name": "LIST_USER_MOCK",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/models/user-mocks.model.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "IUserMock[]",
                "defaultValue": "[\n    {\n        name: \"admin\",\n        password: \"123456\"\n    },\n    {\n        name: \"user\",\n        password: \"user\"\n    },\n    {\n        name: \"local\",\n        password: \"local\"\n    },\n    {\n        name: \"custom\",\n        password: \"custom\"\n    }\n]"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedIn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "LoggedOut",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "any"
            },
            {
                "name": "Secondary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Small",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Button>",
                "defaultValue": "(args: Button) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Header.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Header>",
                "defaultValue": "(args: Header) => ({\n  props: args,\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/stories/Page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<Page>",
                "defaultValue": "(args: Page) => ({\n  props: args,\n})"
            }
        ],
        "functions": [
            {
                "name": "GET_LIST_ITEMS_NLP",
                "file": "src/models/shipping-options.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "GET_PRODUCTS_MOCKS",
                "file": "src/models/products-mocks.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "GET_USERS_MOCKS",
                "file": "src/models/user-mocks.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "URLSERVICE",
                "file": "src/models/request.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Function responsible for the creation of the service URL.</p>\n",
                "args": [
                    {
                        "name": "type",
                        "type": "RequestURL",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": {
                            "pos": 313,
                            "end": 317,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "originalKeywordKind": 150,
                            "escapedText": "type"
                        },
                        "type": "RequestURL",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "pos": 294,
                            "end": 299,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 79,
                            "escapedText": "param"
                        },
                        "comment": "<p>transaction type according at the enum</p>\n",
                        "typeExpression": {
                            "pos": 300,
                            "end": 312,
                            "flags": 4194304,
                            "modifierFlagsCache": 0,
                            "transformFlags": 0,
                            "kind": 304,
                            "type": {
                                "pos": 301,
                                "end": 311,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 1,
                                "kind": 176,
                                "typeName": {
                                    "pos": 301,
                                    "end": 311,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 0,
                                    "kind": 79,
                                    "escapedText": "RequestURL"
                                }
                            }
                        }
                    }
                ]
            }
        ],
        "typealiases": [],
        "enumerations": [
            {
                "name": "RequestType",
                "childs": [
                    {
                        "name": "DELETE",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "DELETE"
                    },
                    {
                        "name": "POST",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "POST"
                    },
                    {
                        "name": "GET",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "GET"
                    },
                    {
                        "name": "PUT",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "PUT"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/models/request.model.ts"
            },
            {
                "name": "RequestURL",
                "childs": [
                    {
                        "name": "POKEMON_POKEDEX",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "POKEMON_POKEDEX"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Enum for the definitions of end points</p>\n",
                "file": "src/models/request.model.ts"
            },
            {
                "name": "WizardAction",
                "childs": [
                    {
                        "name": "Prev",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "1"
                    },
                    {
                        "name": "Next",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "2"
                    },
                    {
                        "name": "End",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": "3"
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/interfaces/i.shipping-label-steps.ts"
            }
        ],
        "groupedVariables": {
            "src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false\n}"
                }
            ],
            "src/stories/Button.stories.ts": [
                {
                    "name": "Large",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Secondary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Small",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Button>",
                    "defaultValue": "(args: Button) => ({\n  props: args,\n})"
                }
            ],
            "src/models/products-mocks.model.ts": [
                {
                    "name": "LIST_PRODUCTS_MOCK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/models/products-mocks.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "defaultValue": "[\n    {\n        name: \"1\",\n        birthday: new Date(1988, 3, 16),\n        size: 212320109,\n    },\n    {\n        name: \"2\",\n        birthday: new Date(1989, 3, 25),\n        size: 21210109,\n    },\n    {\n        name: \"3\",\n        birthday: new Date(2020, 0, 15),\n        size: 2121109,\n    },\n    {\n        name: \"4\",\n        birthday: new Date(2019, 1, 30),\n        size: 562120109,\n    }\n]"
                }
            ],
            "src/models/shipping-options.model.ts": [
                {
                    "name": "LIST_SHIPPING_OPTIONS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/models/shipping-options.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IShippingOptions[]",
                    "defaultValue": "[\n    {\n        name: \"Ground\",\n        value: 1\n    },\n    {\n        name: \"Priority\",\n        value: 2\n    }\n]"
                }
            ],
            "src/models/user-mocks.model.ts": [
                {
                    "name": "LIST_USER_MOCK",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/models/user-mocks.model.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IUserMock[]",
                    "defaultValue": "[\n    {\n        name: \"admin\",\n        password: \"123456\"\n    },\n    {\n        name: \"user\",\n        password: \"user\"\n    },\n    {\n        name: \"local\",\n        password: \"local\"\n    },\n    {\n        name: \"custom\",\n        password: \"custom\"\n    }\n]"
                }
            ],
            "src/stories/Header.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Header.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Header>",
                    "defaultValue": "(args: Header) => ({\n  props: args,\n})"
                }
            ],
            "src/stories/Page.stories.ts": [
                {
                    "name": "LoggedIn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "LoggedOut",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/stories/Page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<Page>",
                    "defaultValue": "(args: Page) => ({\n  props: args,\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/models/shipping-options.model.ts": [
                {
                    "name": "GET_LIST_ITEMS_NLP",
                    "file": "src/models/shipping-options.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/models/products-mocks.model.ts": [
                {
                    "name": "GET_PRODUCTS_MOCKS",
                    "file": "src/models/products-mocks.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/models/user-mocks.model.ts": [
                {
                    "name": "GET_USERS_MOCKS",
                    "file": "src/models/user-mocks.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/models/request.model.ts": [
                {
                    "name": "URLSERVICE",
                    "file": "src/models/request.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Function responsible for the creation of the service URL.</p>\n",
                    "args": [
                        {
                            "name": "type",
                            "type": "RequestURL",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": {
                                "pos": 313,
                                "end": 317,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "originalKeywordKind": 150,
                                "escapedText": "type"
                            },
                            "type": "RequestURL",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "pos": 294,
                                "end": 299,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 79,
                                "escapedText": "param"
                            },
                            "comment": "<p>transaction type according at the enum</p>\n",
                            "typeExpression": {
                                "pos": 300,
                                "end": 312,
                                "flags": 4194304,
                                "modifierFlagsCache": 0,
                                "transformFlags": 0,
                                "kind": 304,
                                "type": {
                                    "pos": 301,
                                    "end": 311,
                                    "flags": 4194304,
                                    "modifierFlagsCache": 0,
                                    "transformFlags": 1,
                                    "kind": 176,
                                    "typeName": {
                                        "pos": 301,
                                        "end": 311,
                                        "flags": 4194304,
                                        "modifierFlagsCache": 0,
                                        "transformFlags": 0,
                                        "kind": 79,
                                        "escapedText": "RequestURL"
                                    }
                                }
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/models/request.model.ts": [
                {
                    "name": "RequestType",
                    "childs": [
                        {
                            "name": "DELETE",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "DELETE"
                        },
                        {
                            "name": "POST",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "POST"
                        },
                        {
                            "name": "GET",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "GET"
                        },
                        {
                            "name": "PUT",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "PUT"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/models/request.model.ts"
                },
                {
                    "name": "RequestURL",
                    "childs": [
                        {
                            "name": "POKEMON_POKEDEX",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "POKEMON_POKEDEX"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Enum for the definitions of end points</p>\n",
                    "file": "src/models/request.model.ts"
                }
            ],
            "src/interfaces/i.shipping-label-steps.ts": [
                {
                    "name": "WizardAction",
                    "childs": [
                        {
                            "name": "Prev",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "1"
                        },
                        {
                            "name": "Next",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "2"
                        },
                        {
                            "name": "End",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": "3"
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/interfaces/i.shipping-label-steps.ts"
                }
            ]
        },
        "groupedTypeAliases": {}
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "className": "AppModule",
        "children": [
            {
                "name": "routes",
                "filename": "src/app/app-routing.module.ts",
                "module": "AppRoutingModule",
                "children": [
                    {
                        "path": "login",
                        "component": "LoginComponent"
                    },
                    {
                        "path": "shipping",
                        "loadChildren": "../modules/features/shipping/shipping.module#ShippingModule",
                        "canActivate": [
                            "AuthGuard"
                        ],
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/modules/features/shipping/shipping-routing.module.ts",
                                        "module": "ShippingRoutingModule",
                                        "children": [
                                            {
                                                "path": "shipping-label-maker/:name",
                                                "component": "ShippingLabelMakerComponent",
                                                "children": []
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ShippingModule"
                            }
                        ]
                    },
                    {
                        "path": "product",
                        "loadChildren": "../modules/features/product/product.module#ProductModule",
                        "children": [
                            {
                                "kind": "module",
                                "children": [
                                    {
                                        "name": "routes",
                                        "filename": "src/modules/features/product/product-routing.module.ts",
                                        "module": "ProductRoutingModule",
                                        "children": [
                                            {
                                                "path": "",
                                                "component": "ProductDefinitionComponent",
                                                "children": [
                                                    {
                                                        "path": "resume",
                                                        "component": "ProductResumeComponent",
                                                        "canActivate": [
                                                            "AuthGuard"
                                                        ]
                                                    }
                                                ]
                                            },
                                            {
                                                "path": "final",
                                                "component": "ProductResumeComponent",
                                                "children": []
                                            }
                                        ],
                                        "kind": "module"
                                    }
                                ],
                                "module": "ProductModule"
                            }
                        ]
                    },
                    {
                        "path": "",
                        "redirectTo": "/login",
                        "pathMatch": "full"
                    },
                    {
                        "path": "**",
                        "redirectTo": "/login",
                        "pathMatch": "full"
                    }
                ],
                "kind": "module"
            }
        ]
    },
    "coverage": {
        "count": 3,
        "status": "low",
        "files": [
            {
                "filePath": "e2e/src/app.po.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AppPage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/guards/auth.guard.ts",
                "type": "guard",
                "linktype": "guard",
                "name": "AuthGuard",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/interfaces/i.shipping-label-steps.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IShippingReceiver",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/interfaces/i.shipping-label-steps.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IShippingSender",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/interfaces/i.shipping-label-steps.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IShippingShippingOption",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/interfaces/i.shipping-label-steps.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IShippingWeight",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/interfaces/i.shipping-options.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IShippingOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/interfaces/i.user-mock.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "IUserMock",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/models/products-mocks.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "GET_PRODUCTS_MOCKS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/models/products-mocks.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_PRODUCTS_MOCK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/models/request.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "URLSERVICE",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/models/shipping-options.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "GET_LIST_ITEMS_NLP",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/models/shipping-options.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_SHIPPING_OPTIONS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/models/user-mocks.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "GET_USERS_MOCKS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/models/user-mocks.model.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LIST_USER_MOCK",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/login/login.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LoginComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/product/product-addition/product-addition.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductAdditionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/product/product-definition/product-definition.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductDefinitionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/product/product-resume/product-resume.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProductResumeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/shipping/shipping-label-maker/shipping-label-maker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingLabelMakerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/shipping/shipping-label/shipping-label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingLabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/shipping/shipping-option/shipping-option.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingOptionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/shipping/shipping-receiver-address/shipping-receiver-address.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingReceiverAddressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/shipping/shipping-sender-address/shipping-sender-address.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingSenderAddressComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/modules/features/shipping/shipping-weight/shipping-weight.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingWeightComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/modules/shared/shipping-button/shipping-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/modules/shared/shipping-header/shipping-header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingHeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/modules/shared/shipping-select/shipping-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ShippingSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/pipes/file-size.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FileSizePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/services/authentication.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AuthenticationService",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/services/login.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LoginService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/services/request.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "RequestService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/services/wizard.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WizardService",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Large",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Secondary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Small",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Header.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedIn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LoggedOut",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/Page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 83,
                "coverageCount": "5/6",
                "status": "very-good"
            },
            {
                "filePath": "src/stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}